@using ActivityWebsite.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

@section css{
    <link rel="stylesheet" href="/Content/css/User/Account/Login.css" type="text/css">
}

@section introdution{
    <!-- Breadcrumb Begin -->
    <section class="breadcrumb-option set-bg" data-setbg="/Content/Media/Images/templates/breadcrumb.jpg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h2>Log in</h2>
                        <div class="breadcrumb__widget">
                            <a href="@Url.Action("Index", "Home")">Home</a>
                            <span>Log in</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb End -->
}

<div class="signup">
    @using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @id = "form-login-service" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" id="provider" name="provider">
        <a href="#" class="signup-google google-color  signup-btn" provider="Google">
            <i class="fab fa-google signup-google-icon"></i>
            <span class="signup-google-text">Log In with Google</span>
        </a>

        <a href="#" class="signup-google facebook-color signup-btn" provider="Facebook">
            <i class="fab fa-facebook-f signup-google-icon"></i>
            <span class="signup-google-text">Log In with Facebook</span>
        </a>
    }
    <div class="signup-or">
        <span class="signup-or-text">Or Login With Account</span>
    </div>
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "signup-form", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.UsernameOrEmail, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.UsernameOrEmail, new { @class = "form-input", @id = "name", @placeholder = "Eg: johndoe@gmail.com" })
            @Html.ValidationMessageFor(m => m.UsernameOrEmail, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "form-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "form-input", @id = "password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </div>
            </div>
        </div>

        <button type="submit" class="form-submit">Log In</button>
    }
    <p class="signup-already">Don't have account ? <a href="@Url.Action("Register", "Account")" class="signup-already-link">Register</a></p>
    <p class="signup-already">Forgot password ? <a href="@Url.Action("ForgotPassword", "Account")" class="signup-already-link">Reset Password</a></p>
</div>



@section Scripts {
    @Scripts.Render("~/plugin/jqueryval")
    @Scripts.Render("~/Scripts/User/Account/Login.js")
}