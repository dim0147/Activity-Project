@model ActivityWebsite.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Create New Account";
    ViewBag.BCHeader = "Create New Account";
    ViewBag.BCAction = "Login";
    ViewBag.BCController = "Account";
    ViewBag.BCActionText = "Login";
}

@section css{
    <link rel="stylesheet" href="~/Content/css/User/Account/ExternalLoginConfirmation.css" type="text/css">
}

@Html.Partial("_Breadcrumb")


<div class="signup">
    @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "signup-form", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Email)

        <h4>Association Form</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <p class="text-info">
            You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong> using <strong>@Html.DisplayFor(m => m.Email)</strong>.
            Please enter a user name for this site below and click the Register button to finish
            logging in.
        </p>


        <div class="form-group">
            @Html.LabelFor(m => m.Username, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Username, new { @class = "form-input", @id = "name", @placeholder = "Eg: jonhdoe123" })
            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DisplayName, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.DisplayName, new { @class = "form-input", @placeholder = "Eg: Jonh Doe" })
            @Html.ValidationMessageFor(m => m.DisplayName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-input", @placeholder = "Eg: 9837 1353" })
            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="form-submit">Create</button>
        <p class="signup-already">Already have an account ? <a href="@Url.Action("Login", "Account")" class="signup-already-link">Log In</a></p>
    }
</div>
@section Scripts {
    @Scripts.Render("~/plugin/jqueryval")
}
